name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 0.1.0)"
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

      - name: Build WebAssembly
        run: cargo build --target wasm32-wasip1 --release

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create release archive
        run: |
          mkdir -p release
          cp target/wasm32-wasip1/release/crates-zed.wasm release/
          cp extension.toml release/
          cp README.md release/
          cp LICENSE release/
          cd release
          tar -czf ../crates-autocomplete-v${{ steps.version.outputs.version }}.tar.gz *

      - name: Upload release artifact
        uses: actions/upload-artifact@v5
        with:
          name: crates-autocomplete-v${{ steps.version.outputs.version }}
          path: crates-autocomplete-v${{ steps.version.outputs.version }}.tar.gz

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: crates-autocomplete-v${{ steps.version.outputs.version }}

      - name: Extract changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract the section for this version from CHANGELOG.md
            awk '/^## \[?'${{ steps.version.outputs.version }}'\]?/{flag=1;next}/^## \[?[0-9]/{flag=0}flag' CHANGELOG.md > release_notes.md
            if [ -s release_notes.md ]; then
              echo "notes_file=release_notes.md" >> $GITHUB_OUTPUT
            else
              echo "No changelog entry found for version ${{ steps.version.outputs.version }}"
              echo "notes_file=" >> $GITHUB_OUTPUT
            fi
          else
            echo "notes_file=" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.version.outputs.version }}
          body_path: ${{ steps.changelog.outputs.notes_file != '' && steps.changelog.outputs.notes_file || '' }}
          body: ${{ steps.changelog.outputs.notes_file == '' && 'Release v' || '' }}${{ steps.changelog.outputs.notes_file == '' && steps.version.outputs.version || '' }}
          draft: false
          prerelease: false
          files: |
            crates-autocomplete-v${{ steps.version.outputs.version }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
